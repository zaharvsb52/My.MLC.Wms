<Activity mc:Ignorable="sap sap2010 sads" x:Class="MLC.Wms.Workflows.Wf_Data.GET_ORDER_SHIPPED"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:mwad="clr-namespace:MLC.WF.Activities.DataAccess;assembly=MLC.WF.Activities"
 xmlns:mwam="clr-namespace:MLC.WF.Activities.Manage;assembly=MLC.WF.Activities"
 xmlns:mwice="clr-namespace:MLC.Wms.Integration.Common.Entities;assembly=MLC.Wms.Integration.Common"
 xmlns:mwice1="clr-namespace:MLC.Wms.Integration.Common.Exceptions;assembly=MLC.Wms.Integration.Common"
 xmlns:mwicm="clr-namespace:MLC.Wms.Integration.Common.Message;assembly=MLC.Wms.Integration.Common"
 xmlns:mwme="clr-namespace:MLC.Wms.Model.Entities;assembly=MLC.Wms.Model"
 xmlns:n="clr-namespace:NHibernate;assembly=NHibernate"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="MandantCode" Type="InArgument(x:String)" />
    <x:Property Name="QueueMessage" Type="InArgument(mwme:IoQueueIn)" />
    <x:Property Name="Setting" Type="InArgument(scg:IDictionary(x:String, x:Object))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>GET_ORDER_SHIPPED</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>MLC.Wms.Model.Entities</x:String>
      <x:String>MLC.Wms.Integration.Common</x:String>
      <x:String>MLC.Wms.Integration.Common.Entities</x:String>
      <x:String>MLC.Wms.Integration.Common.Message</x:String>
      <x:String>MLC.Wms.Integration.Common.Exceptions</x:String>
      <x:String>NHibernate</x:String>
      <x:String>NHibernate.Linq</x:String>
      <x:String>WebClient.Abac</x:String>
      <x:String>MLC.Wms.Api</x:String>
      <x:String>MLC.WF.Activities.Exceptions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Iesi.Collections</AssemblyReference>
      <AssemblyReference>log4net</AssemblyReference>
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.Practices.Unity</AssemblyReference>
      <AssemblyReference>Microsoft.Practices.Unity.Configuration</AssemblyReference>
      <AssemblyReference>Microsoft.Practices.Unity.RegistrationByConvention</AssemblyReference>
      <AssemblyReference>MLC.WF.Activities</AssemblyReference>
      <AssemblyReference>MLC.WF.Core</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NHibernate</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>Serialize.Linq</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.DurableInstancing</AssemblyReference>
      <AssemblyReference>System.Activities.Presentation</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq.Dynamic</AssemblyReference>
      <AssemblyReference>System.Runtime.DurableInstancing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>WebClient.Abac</AssemblyReference>
      <AssemblyReference>WebClient.Common</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>MLC.Wms.Api</AssemblyReference>
      <AssemblyReference>MLC.Wms.Bootstrap</AssemblyReference>
      <AssemblyReference>MLC.Wms.Common</AssemblyReference>
      <AssemblyReference>MLC.Wms.Integration.Common</AssemblyReference>
      <AssemblyReference>MLC.Wms.Model</AssemblyReference>
      <AssemblyReference>MLC.Wms.WF.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>MLC.Wms.Workflows</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Процесс" sap2010:WorkflowViewState.IdRef="Flowchart_31">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="GET_ORDER_SHIPPED" Name="queueMessageType" />
      <Variable x:TypeArguments="x:String" Name="lastowbname" />
      <Variable x:TypeArguments="x:String" Name="route" />
      <Variable x:TypeArguments="mwicm:UniversalCommandMessage" Name="inputData" />
      <Variable x:TypeArguments="n:ISession" Name="session" />
      <Variable x:TypeArguments="s:DateTime[]" Name="dates" />
      <Variable x:TypeArguments="s:Int32[]" Name="productIdList" />
      <Variable x:TypeArguments="scg:List(mwice:OWB)" Name="owbList">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:List(mwice:OWB)">new List&lt;OWB&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="mwme:wmsEventDetailOWB[]" Name="eventDetailList" />
      <Variable x:TypeArguments="mwice1:TechnicalIntegrationException" Name="resultException">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="mwice1:TechnicalIntegrationException">new TechnicalIntegrationException() { QueueMessageTypeName = "DATA_LOAD_FEEDBACK" }</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(mwice1:TechnicalIntegrationException)" Name="ErrorLst">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:List(mwice1:TechnicalIntegrationException)">new List&lt;TechnicalIntegrationException&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID19" sap2010:WorkflowViewState.IdRef="FlowStep_190">
        <Flowchart DisplayName="inputData initialize" sap2010:WorkflowViewState.IdRef="Flowchart_37">
          <Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_172">
              <Assign DisplayName="get messageData" sap2010:WorkflowViewState.IdRef="Assign_123">
                <Assign.To>
                  <OutArgument x:TypeArguments="mwicm:UniversalCommandMessage">
                    <mca:CSharpReference x:TypeArguments="mwicm:UniversalCommandMessage">inputData</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="mwicm:UniversalCommandMessage">
                    <mca:CSharpValue x:TypeArguments="mwicm:UniversalCommandMessage">SerializationHelper.Deserialize&lt;UniversalCommandMessage&gt;(QueueMessage.Data)</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID5" DisplayName="Data is null" sap2010:WorkflowViewState.IdRef="FlowDecision_35">
                  <FlowDecision.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean">inputData == null</mca:CSharpValue>
                  </FlowDecision.Condition>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_168">
                      <mwam:Log Exception="{x:Null}" SkipFaultTrace="{x:Null}" sap2010:WorkflowViewState.IdRef="Log_11" Level="Debug">
                        <mwam:Log.Message>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">string.Format("Message.Data is null")</mca:CSharpValue>
                          </InArgument>
                        </mwam:Log.Message>
                      </mwam:Log>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_171">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_124">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime[]">
                            <mca:CSharpReference x:TypeArguments="s:DateTime[]">dates</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime[]">
                            <mca:CSharpValue x:TypeArguments="s:DateTime[]" xml:space="preserve">inputData.CommandList == null
    ? null
    : inputData.CommandList.Where(command =&gt; command.Name == "SHIPPED_DATE") == null 
        ? null
        : inputData.CommandList.Where(command =&gt; command.Name == "SHIPPED_DATE")
                               .Select(command =&gt; command.Value)
                               .Distinct()
                               .Select(date =&gt; DateTime.Parse(date))
                               .ToArray()</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_170">
                          <mwad:SessionGet sap2010:WorkflowViewState.IdRef="SessionGet_6">
                            <mwad:SessionGet.Session>
                              <OutArgument x:TypeArguments="n:ISession">
                                <mca:CSharpReference x:TypeArguments="n:ISession">session</mca:CSharpReference>
                              </OutArgument>
                            </mwad:SessionGet.Session>
                          </mwad:SessionGet>
                          <FlowStep.Next>
                            <FlowDecision x:Name="__ReferenceID1" DisplayName="Setting?" sap2010:WorkflowViewState.IdRef="FlowDecision_34">
                              <FlowDecision.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Setting != null &amp;&amp; Setting.Count &gt; 0</mca:CSharpValue>
                              </FlowDecision.Condition>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_169">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_125">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String">route</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">Setting["ROUTE"].ToString().Trim()</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </FlowStep>
                              </FlowDecision.True>
                            </FlowDecision>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </Flowchart.StartNode>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
          <x:Reference>__ReferenceID5</x:Reference>
          <x:Reference>__ReferenceID6</x:Reference>
        </Flowchart>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID23" sap2010:WorkflowViewState.IdRef="FlowStep_189">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_126">
              <Assign.To>
                <OutArgument x:TypeArguments="mwme:wmsEventDetailOWB[]">
                  <mca:CSharpReference x:TypeArguments="mwme:wmsEventDetailOWB[]">eventDetailList</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="mwme:wmsEventDetailOWB[]">
                  <mca:CSharpValue x:TypeArguments="mwme:wmsEventDetailOWB[]" xml:space="preserve">session.Query&lt;wmsEventDetailOWB&gt;()
       .Where(i =&gt; i.EventHeader.Partner.PartnerCode == MandantCode &amp;&amp;
                   i.EventHeader.EventKind.EventKindCode == "OWB_COMPLETED" &amp;&amp;
                   i.EventHeader.Status.StatusCode == "EVENT_CREATED" &amp;&amp;
                   dates.Contains(i.EventHeader.DateIns.Value.Date)
             )
       .ToArray()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID26" DisplayName="any data?" sap2010:WorkflowViewState.IdRef="FlowDecision_37">
                <FlowDecision.Condition>
                  <mca:CSharpValue x:TypeArguments="x:Boolean">eventDetailList.Any()</mca:CSharpValue>
                </FlowDecision.Condition>
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID24" sap2010:WorkflowViewState.IdRef="FlowStep_188">
                    <ForEach x:TypeArguments="mwme:wmsEventDetailOWB" DisplayName="По каждой накладной" sap2010:WorkflowViewState.IdRef="ForEach`1_8">
                      <ForEach.Values>
                        <InArgument x:TypeArguments="scg:IEnumerable(mwme:wmsEventDetailOWB)">
                          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(mwme:wmsEventDetailOWB)">eventDetailList</mca:CSharpValue>
                        </InArgument>
                      </ForEach.Values>
                      <ActivityAction x:TypeArguments="mwme:wmsEventDetailOWB">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="mwme:wmsEventDetailOWB" Name="detail" />
                        </ActivityAction.Argument>
                        <TryCatch DisplayName="TryCatch Get OWBList" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                          <TryCatch.Try>
                            <Flowchart DisplayName="Get OWBList" sap2010:WorkflowViewState.IdRef="Flowchart_38">
                              <Flowchart.Variables>
                                <Variable x:TypeArguments="mwme:WmsProductHistory[]" Name="wmsproducts" />
                                <Variable x:TypeArguments="mwme:WmsOWBPos[]" Name="wmsowbposList" />
                                <Variable x:TypeArguments="mwme:WmsOWB" Name="wmsowb" />
                                <Variable x:TypeArguments="scg:List(mwice:Product)" Name="productList" />
                                <Variable x:TypeArguments="scg:List(mwice:OWBPos)" Name="owbposList" />
                                <Variable x:TypeArguments="mwice:OWB" Name="owb" />
                              </Flowchart.Variables>
                              <Flowchart.StartNode>
                                <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_181">
                                  <Assign DisplayName="Сохраняем крайний артикул, взятый в обработку" sap2010:WorkflowViewState.IdRef="Assign_127">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String">lastowbname</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">detail.OWBName</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_180">
                                      <Assign DisplayName="Get WmsOWB" sap2010:WorkflowViewState.IdRef="Assign_128">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="mwme:WmsOWB">
                                            <mca:CSharpReference x:TypeArguments="mwme:WmsOWB">wmsowb</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="mwme:WmsOWB">
                                            <mca:CSharpValue x:TypeArguments="mwme:WmsOWB">session.Query&lt;WmsOWB&gt;().Single(owb =&gt; owb.OWBID == detail.OWBID_r)</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <FlowStep.Next>
                                        <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_179">
                                          <Assign DisplayName="Get productIdList" sap2010:WorkflowViewState.IdRef="Assign_129">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Int32[]">
                                                <mca:CSharpReference x:TypeArguments="s:Int32[]">productIdList</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Int32[]">
                                                <mca:CSharpValue x:TypeArguments="s:Int32[]" xml:space="preserve">session.Query&lt;wmsEventDetailPRD&gt;()
       .Where(i =&gt; i.EVENTKINDCODE_R == "PRD_OUTPUT" &amp;&amp;
                   i.STATUSCODE_R == "EVENT_CREATED" &amp;&amp;
                   i.OWBID_R == detail.OWBID_r
             )
       .Select(i =&gt; i.PRODUCTID_R.Value)
       .Distinct()
       .ToArray()</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <FlowStep.Next>
                                            <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_178">
                                              <Assign DisplayName="Get OWB.Products" sap2010:WorkflowViewState.IdRef="Assign_130">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="mwme:WmsProductHistory[]">
                                                    <mca:CSharpReference x:TypeArguments="mwme:WmsProductHistory[]">wmsproducts</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="mwme:WmsProductHistory[]">
                                                    <mca:CSharpValue x:TypeArguments="mwme:WmsProductHistory[]" xml:space="preserve">session.Query&lt;WmsProductHistory&gt;()
       .Where(p =&gt; productIdList.Contains(p.ProductID) &amp;&amp; p.HDateTill &gt; DateTime.Now)
       .ToArray()</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <FlowStep.Next>
                                                <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_177">
                                                  <Assign DisplayName="WmsProductList -&gt; List&lt;Integration.Product&gt;" sap2010:WorkflowViewState.IdRef="Assign_131">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="scg:List(mwice:Product)">
                                                        <mca:CSharpReference x:TypeArguments="scg:List(mwice:Product)">productList</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="scg:List(mwice:Product)">
                                                        <mca:CSharpValue x:TypeArguments="scg:List(mwice:Product)" xml:space="preserve">wmsproducts.Select(wmsp =&gt; new Product
            {
                ID = wmsp.ProductID,
                TECode = wmsp.TECode_r,
                ArtHostRef = wmsp.Art.ArtHostRef,
                MeasureCode = wmsp.SKU.Measure == null ? null : wmsp.SKU.Measure.MeasureCode,
                Count = wmsp.ProductCountSKU,
                Count2SKU = wmsp.ProductCount,
                TTEQuantity = wmsp.ProductTTEQuantity,
                QLFCode = wmsp.QLFCode_r,
                QLFDetailCode = wmsp.QLFDetailCode_r,
                InputDate = wmsp.ProductInputDate,
                ProductDate = wmsp.ProductDate,
                Pack = wmsp.ProductPack,
                PackCountSKU = wmsp.ProductPackCountSKU,
                ExpiryDate = wmsp.ProductExpiryDate,
                Batch = wmsp.ProductBatch,
                Lot = wmsp.ProductLot,
                SerialNumber = wmsp.ProductSerialNumber,
                Color = wmsp.ProductColor,
                Tone = wmsp.ProductTone,
                Size = wmsp.ProductSize,
                ArtName = wmsp.Art.ArtName,
                MandantCode = wmsp.Partner == null ? null : wmsp.Partner.PartnerCode,
                IWBPosID = wmsp.IWBPos == null ? (int?)null : wmsp.IWBPos.IWBPosID,
                OWBPosID = wmsp.OWBPos == null ? (int?)null : wmsp.OWBPos.OWBPosID,
                FactoryHostRef = wmsp.Factory == null ? null : wmsp.Factory.FactoryHostRef,
                StatusCode = wmsp.StatusCode_r,
                BatchCode = wmsp.ProductBatchCode,
                BoxNumber = wmsp.ProductBoxNumber,
                HostRef = wmsp.ProductHostRef,
                KitArtName = wmsp.ProductKitArtName,
                OwnerCode = wmsp.ProductOwner == null ? null : wmsp.ProductOwner.PartnerCode,
                Priority = wmsp.ProductPriority,
                CountryCode = wmsp.CountryCode_r,
                Line = wmsp.OWBPos == null ? (int?)null : wmsp.OWBPos.OWBPosNumber,
                GTD = wmsp.ProductGTD
            }).ToList()</mca:CSharpValue>
                                                      </InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <FlowStep.Next>
                                                    <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_176">
                                                      <Assign DisplayName="Get OWB.OWBPos" sap2010:WorkflowViewState.IdRef="Assign_132">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="mwme:WmsOWBPos[]">
                                                            <mca:CSharpReference x:TypeArguments="mwme:WmsOWBPos[]">wmsowbposList</mca:CSharpReference>
                                                          </OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="mwme:WmsOWBPos[]">
                                                            <mca:CSharpValue x:TypeArguments="mwme:WmsOWBPos[]" xml:space="preserve">session.Query&lt;WmsOWBPos&gt;()
       .Where(o =&gt; o.OWB.OWBID == detail.OWBID_r)
       .ToArray()</mca:CSharpValue>
                                                          </InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <FlowStep.Next>
                                                        <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_175">
                                                          <Assign DisplayName="WmsOWBPosList -&gt; List&lt;Integration.OWBPos&gt;" sap2010:WorkflowViewState.IdRef="Assign_133">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="scg:List(mwice:OWBPos)">
                                                                <mca:CSharpReference x:TypeArguments="scg:List(mwice:OWBPos)">owbposList</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="scg:List(mwice:OWBPos)">
                                                                <mca:CSharpValue x:TypeArguments="scg:List(mwice:OWBPos)" xml:space="preserve">wmsowbposList.Select(pos =&gt; new OWBPos
            {
                ID = pos.OWBPosID,
                Line = pos.OWBPosNumber,
                ArtName = pos.SKU.Art.ArtName,
                ArtDesc = pos.SKU.Art.ArtDesc,
                ArtHostRef = pos.SKU.Art.ArtHostRef,
                MeasureCode = pos.SKU.Measure.MeasureCode,
                Count = pos.OWBPosCount,
                Count2SKU = pos.OWBPosCount2SKU,
                StatusCode = pos.Status.StatusCode,
                Color = pos.OWBPosColor,
                Tone = pos.OWBPosTone,
                Size = pos.OWBPosSize,
                Batch = pos.OWBPosBatch,
                Lot = pos.OWBPosLot,
                ExpiryDate = pos.OWBPosExpiryDate,
                ProductDate = pos.OWBPosProductDate,
                SerialNumber = pos.OWBPosSerialNumber,
                FactoryHostRef = pos.Factory == null ? null : pos.Factory.FactoryHostRef,
                QLFCode = pos.QLF == null ? null : pos.QLF.QLFCode,
                QLFDetailCode = pos.QLFDetailCode_r,
                PriceValue = pos.OWBPosPriceValue,
                PriceValueVAT = pos.OWBPosPriceValueVAT,
                Reserved = pos.OWBPosReserved,
                BoxNumber = pos.OWBPosBoxNumber,
                KitArtName = pos.OWBPosKitArtName,
                Owner = pos.OWBPosOwner == null ? null : pos.OWBPosOwner.PartnerCode,
                HostRef = pos.OWBPosHostRef,
                CPVList = pos.CPV_List == null ? null : pos.CPV_List.Select(cpv =&gt; 
                              new CPV {
                                          Name = cpv.CustomParam.CustomParamCode,
                                          Value = cpv.CPVValue
                                      }).ToList()
            }).ToList()</mca:CSharpValue>
                                                              </InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <FlowStep.Next>
                                                            <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_174">
                                                              <Assign DisplayName="fill Integration.OWB" sap2010:WorkflowViewState.IdRef="Assign_134">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="mwice:OWB">
                                                                    <mca:CSharpReference x:TypeArguments="mwice:OWB">owb</mca:CSharpReference>
                                                                  </OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="mwice:OWB">
                                                                    <mca:CSharpValue x:TypeArguments="mwice:OWB" xml:space="preserve">new OWB
            {
                ID = wmsowb.OWBID,
                MandantCode = wmsowb.Partner.PartnerCode,
                Name = wmsowb.OWBName,
                Priority = wmsowb.OWBPriority,
                StatusCode = wmsowb.Status.StatusCode,
                OutDatePlan = wmsowb.OWBOutDatePlan,
                RecipientHostRef = wmsowb.OWBRecipient == null ? null : wmsowb.OWBRecipient.PartnerHostRef,
                PayerHostRef = wmsowb.OWBPayer == null ? null : wmsowb.OWBPayer.PartnerHostRef,
                ClientRecipient = wmsowb.OWBClientRecipient == null ? null : new EcomClient
                {
                    LastName = wmsowb.OWBClientRecipient.ClientLastName,
                    Name = wmsowb.OWBClientRecipient.ClientName,
                    MiddleName = wmsowb.OWBClientRecipient.ClientMiddleName,
                    PhoneMobile = wmsowb.OWBClientRecipient.ClientPhoneMobile,
                    PhoneWork = wmsowb.OWBClientRecipient.ClientPhoneWork,
                    PhoneInternal = wmsowb.OWBClientRecipient.ClientPhoneInternal,
                    PhoneHome = wmsowb.OWBClientRecipient.ClientPhoneHome,
                    Email = wmsowb.OWBClientRecipient.ClientEmail,
                    HostRef = wmsowb.OWBClientRecipient.ClientHostRef,
                    AddressList = wmsowb.OWBClientRecipientAddr == null
                                    ? null
                                    : new List&lt;AddressBook&gt;
                                        { new AddressBook {
                                            ID = wmsowb.OWBClientRecipientAddr.AddressBookID,
                                            Country = wmsowb.OWBClientRecipientAddr.AddressBookCountry,
                                            Index =  wmsowb.OWBClientRecipientAddr.AddressBookIndex,
                                            Region = wmsowb.OWBClientRecipientAddr.AddressBookRegion,
                                            City = wmsowb.OWBClientRecipientAddr.AddressBookCity,
                                            District = wmsowb.OWBClientRecipientAddr.AddressBookDistrict,
                                            Street = wmsowb.OWBClientRecipientAddr.AddressBookStreet,
                                            Building = wmsowb.OWBClientRecipientAddr.AddressBookBuilding,
                                            Apartment = wmsowb.OWBClientRecipientAddr.AddressBookApartment,
                                            TypeCode = wmsowb.OWBClientRecipientAddr.AddressBookTypeCode,
                                            Raw = wmsowb.OWBClientRecipientAddr.AddressBookRaw,
                                            Default = wmsowb.OWBClientRecipientAddr.AddressBookDefault,
                                            HostRef = wmsowb.OWBClientRecipientAddr.AddressBookHostRef
                                        } }
                },
                PlannedDeliveryDate = wmsowb.OWBPlannedDeliveryDate,
                ClientPayerHostRef = wmsowb.OWBClientPayer == null ? null : wmsowb.OWBClientPayer.ClientHostRef,
                Description = wmsowb.OWBDesc,
                FactoryHostRef = wmsowb.Factory == null ? null : wmsowb.Factory.FactoryHostRef,
                Address = new AddressBook
                {
                    ID = wmsowb.AddressBook == null ? (int?)null : wmsowb.AddressBook.AddressBookID,
                    Country = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookCountry,
                    Index = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookIndex,
                    Region = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookRegion,
                    City = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookCity,
                    District = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookDistrict,
                    Street = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookStreet,
                    Building = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookBuilding,
                    Apartment = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookApartment,
                    TypeCode = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookTypeCode,
                    Raw = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookRaw,
                    Default = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookDefault,
                    HostRef = wmsowb.AddressBook == null ? null : wmsowb.AddressBook.AddressBookHostRef
                },
                ProxyNumber = wmsowb.OWBProxyNumber,
                ProxyDate = wmsowb.OWBProxyDate,
                HostRefDate = wmsowb.OWBHostRefDate,
                TypeCode = wmsowb.OWBType,
                RoutePlan = wmsowb.OWBRoutePlan,
                HostRef = wmsowb.OWBHostRef,
                OwnerCode = wmsowb.OWBOwner == null ? null : wmsowb.OWBOwner.PartnerCode,
                Group = wmsowb.OWBGroup,
                Carrier = wmsowb.OWBCarrier == null ? null : new Partner
                {
                    Name = wmsowb.OWBCarrier.PartnerName,
                    FullName = wmsowb.OWBCarrier.PartnerFullName,
                    Kind = wmsowb.OWBCarrier.PartnerKind,
                    Contract = wmsowb.OWBCarrier.PartnerContract,
                    DateContract = wmsowb.OWBCarrier.PartnerDateContract,
                    Phone = wmsowb.OWBCarrier.PartnerPhone,
                    Fax = wmsowb.OWBCarrier.PartnerFax,
                    Email = wmsowb.OWBCarrier.PartnerEmail,
                    INN = wmsowb.OWBCarrier.PartnerINN,
                    KPP = wmsowb.OWBCarrier.PartnerKPP,
                    OGRN = wmsowb.OWBCarrier.PartnerOGRN,
                    OKPO = wmsowb.OWBCarrier.PartnerOKPO,
                    OKVED = wmsowb.OWBCarrier.PartnerOKVED,
                    SettlementAccount = wmsowb.OWBCarrier.PartnerSettlementAccount,
                    CorrespondentAccount = wmsowb.OWBCarrier.PartnerCorrespondentAccount,
                    BIK = wmsowb.OWBCarrier.PartnerBIK,
                    HostRef = wmsowb.OWBCarrier.PartnerHostRef,
                    AddressList = wmsowb.OWBCarrier.WmsAddressBook_List == null
                                    ? null
                                    : wmsowb.OWBCarrier.WmsAddressBook_List.Select(addr =&gt;
                                        new AddressBook
                                        {
                                            ID = addr.AddressBookID,
                                            Country = addr.AddressBookCountry,
                                            Index = addr.AddressBookIndex,
                                            Region = addr.AddressBookRegion,
                                            City = addr.AddressBookCity,
                                            District = addr.AddressBookDistrict,
                                            Street = addr.AddressBookStreet,
                                            Building = addr.AddressBookBuilding,
                                            Apartment = addr.AddressBookApartment,
                                            TypeCode = addr.AddressBookTypeCode,
                                            Raw = addr.AddressBookRaw,
                                            Default = addr.AddressBookDefault,
                                            HostRef = addr.AddressBookHostRef
                                        }).ToList()
                },
                PartnerOrder = wmsowb.OWBPartnerOrder,

                ProductList = productList.Count() == 0 ? null : productList,
                OWBPosList = owbposList.Count() == 0 ? null : owbposList,
                CPVList = wmsowb.CPV_List == null ? null : wmsowb.CPV_List.Select(cpv =&gt;
                              new CPV
                              {
                                  Name = cpv.CustomParam.CustomParamCode,
                                  Value = cpv.CPVValue
                              }).ToList(),
                CommandList = new List&lt;Command&gt; {
                    new Command{
                    Name = "FactShipmentDate",
                    Value = detail.EventHeader.EventHeaderStartTime.ToString("dd.MM.yyyy")
                } }
            }</mca:CSharpValue>
                                                                  </InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <FlowStep.Next>
                                                                <FlowStep x:Name="__ReferenceID15" sap2010:WorkflowViewState.IdRef="FlowStep_173">
                                                                  <AddToCollection x:TypeArguments="mwice:OWB" DisplayName="AddToCollection&lt;OWB&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_23">
                                                                    <AddToCollection.Item>
                                                                      <InArgument x:TypeArguments="mwice:OWB">
                                                                        <mca:CSharpValue x:TypeArguments="mwice:OWB">owb</mca:CSharpValue>
                                                                      </InArgument>
                                                                    </AddToCollection.Item>
                                                                    <InArgument x:TypeArguments="scg:ICollection(mwice:OWB)">
                                                                      <mca:CSharpValue x:TypeArguments="scg:ICollection(mwice:OWB)">owbList</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </AddToCollection>
                                                                </FlowStep>
                                                              </FlowStep.Next>
                                                            </FlowStep>
                                                          </FlowStep.Next>
                                                        </FlowStep>
                                                      </FlowStep.Next>
                                                    </FlowStep>
                                                  </FlowStep.Next>
                                                </FlowStep>
                                              </FlowStep.Next>
                                            </FlowStep>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </Flowchart.StartNode>
                              <x:Reference>__ReferenceID7</x:Reference>
                              <x:Reference>__ReferenceID8</x:Reference>
                              <x:Reference>__ReferenceID9</x:Reference>
                              <x:Reference>__ReferenceID10</x:Reference>
                              <x:Reference>__ReferenceID11</x:Reference>
                              <x:Reference>__ReferenceID12</x:Reference>
                              <x:Reference>__ReferenceID13</x:Reference>
                              <x:Reference>__ReferenceID14</x:Reference>
                              <x:Reference>__ReferenceID15</x:Reference>
                            </Flowchart>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="TechnicalIntegrationException" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="mwice1:TechnicalIntegrationException" Name="exp" />
                                  </Sequence.Variables>
                                  <Assign DisplayName="Exp" sap2010:WorkflowViewState.IdRef="Assign_135">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="mwice1:TechnicalIntegrationException">
                                        <mca:CSharpReference x:TypeArguments="mwice1:TechnicalIntegrationException">exp</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="mwice1:TechnicalIntegrationException">
                                        <mca:CSharpValue x:TypeArguments="mwice1:TechnicalIntegrationException">new TechnicalIntegrationException(exception.Message)</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Укажем тип очереди для ошибок" sap2010:WorkflowViewState.IdRef="Assign_136">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String">exp.QueueMessageTypeName</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">DATA_LOAD_FEEDBACK</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Укажем тип очереди для ошибок" sap2010:WorkflowViewState.IdRef="Assign_137">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String">exp.Uri</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">string.Format("ENTITYKEY={0}; ENTITY=OWB;", detail.OWBName)</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If sap2010:WorkflowViewState.IdRef="If_14">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">exception.InnerException != null</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign DisplayName="Укажем тип очереди для ошибок" sap2010:WorkflowViewState.IdRef="Assign_138">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String">exp.CallStack</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <mca:CSharpValue x:TypeArguments="x:String">exception.InnerException.ToString()</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <AddToCollection x:TypeArguments="mwice1:TechnicalIntegrationException" DisplayName="Добавим информацию об ошибке" sap2010:WorkflowViewState.IdRef="AddToCollection`1_24">
                                    <AddToCollection.Item>
                                      <InArgument x:TypeArguments="mwice1:TechnicalIntegrationException">
                                        <mca:CSharpValue x:TypeArguments="mwice1:TechnicalIntegrationException">exp</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection.Item>
                                    <InArgument x:TypeArguments="scg:ICollection(mwice1:TechnicalIntegrationException)">
                                      <mca:CSharpValue x:TypeArguments="scg:ICollection(mwice1:TechnicalIntegrationException)">ErrorLst</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </ActivityAction>
                    </ForEach>
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID25" DisplayName="errors" sap2010:WorkflowViewState.IdRef="FlowDecision_36">
                        <FlowDecision.Condition>
                          <mca:CSharpValue x:TypeArguments="x:Boolean">ErrorLst.Count &gt; 0</mca:CSharpValue>
                        </FlowDecision.Condition>
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID20" sap2010:WorkflowViewState.IdRef="FlowStep_183">
                            <Assign DisplayName="Формируем сообщение об ошибке" sap2010:WorkflowViewState.IdRef="Assign_139">
                              <Assign.To>
                                <OutArgument x:TypeArguments="mwicm:ErrorMessage">
                                  <mca:CSharpReference x:TypeArguments="mwicm:ErrorMessage">resultException.ErrorMessage</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="mwicm:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="mwicm:ErrorMessage" xml:space="preserve">new ErrorMessage()
        {
            CommandList = inputData.CommandList,
            ErrorInfoList = ErrorLst.Select(err =&gt; IntegrationErrorInfoProvider.GetErrorInfo(err)).ToList()
        }</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID22" sap2010:WorkflowViewState.IdRef="FlowStep_182">
                                <Throw sap2010:WorkflowViewState.IdRef="Throw_27">
                                  <InArgument x:TypeArguments="s:Exception">
                                    <mca:CSharpValue x:TypeArguments="s:Exception">resultException</mca:CSharpValue>
                                  </InArgument>
                                </Throw>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID21" sap2010:WorkflowViewState.IdRef="FlowStep_187">
                            <Flowchart DisplayName="Запись сообщения в исходящую очередь" sap2010:WorkflowViewState.IdRef="Flowchart_39">
                              <Flowchart.Variables>
                                <Variable x:TypeArguments="scg:List(mwicm:Command)" Name="commandList">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="scg:List(mwicm:Command)">new List&lt;Command&gt;()</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                                <Variable x:TypeArguments="x:Boolean" Name="boolka" />
                                <Variable x:TypeArguments="mwicm:WHSOWBCommandMessage" Name="message" />
                                <Variable x:TypeArguments="mwme:IoQueueOut" Name="ioQueueOut" />
                              </Flowchart.Variables>
                              <Flowchart.StartNode>
                                <FlowStep x:Name="__ReferenceID18" sap2010:WorkflowViewState.IdRef="FlowStep_186">
                                  <Assign DisplayName="Формирование исходящего сообщения об ошибке" sap2010:WorkflowViewState.IdRef="Assign_140">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="mwicm:WHSOWBCommandMessage">
                                        <mca:CSharpReference x:TypeArguments="mwicm:WHSOWBCommandMessage">message</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="mwicm:WHSOWBCommandMessage">
                                        <mca:CSharpValue x:TypeArguments="mwicm:WHSOWBCommandMessage">new WHSOWBCommandMessage() { OWBList = owbList }</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_185">
                                      <Assign DisplayName="ioQueueOut" sap2010:WorkflowViewState.IdRef="Assign_141">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="mwme:IoQueueOut">
                                            <mca:CSharpReference x:TypeArguments="mwme:IoQueueOut">ioQueueOut</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="mwme:IoQueueOut">
                                            <mca:CSharpValue x:TypeArguments="mwme:IoQueueOut" xml:space="preserve">new IoQueueOut()
            {
                QueueMessageType = session.Query&lt;IoQueueMessageType&gt;().First(t =&gt; t.Code == "ORDER_SHIPPED"),
                QueueMessageState = QueueMessageStates.Ready,
                GroupCode = null,
                ProcessCode = Guid.NewGuid().ToString(),
                Mandant = session.Query&lt;WmsMandant&gt;().First(m =&gt; m.PartnerCode == MandantCode),
                QueueIn = QueueMessage,
                Message = null,
                Data = SerializationHelper.SerializeToBytes(message),
                RequiredProcessDate = DateTime.Now,
                Selector = route,
                Uri = null
            }</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <FlowStep.Next>
                                        <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_184">
                                          <mwad:EntityAdd Entities="{x:Null}" DisplayName="OUT" sap2010:WorkflowViewState.IdRef="EntityAdd_9">
                                            <mwad:EntityAdd.Entity>
                                              <InArgument x:TypeArguments="x:Object">
                                                <mca:CSharpValue x:TypeArguments="x:Object">ioQueueOut</mca:CSharpValue>
                                              </InArgument>
                                            </mwad:EntityAdd.Entity>
                                          </mwad:EntityAdd>
                                        </FlowStep>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </Flowchart.StartNode>
                              <x:Reference>__ReferenceID16</x:Reference>
                              <x:Reference>__ReferenceID17</x:Reference>
                              <x:Reference>__ReferenceID18</x:Reference>
                            </Flowchart>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
                <FlowDecision.False>
                  <FlowStep x:Name="__ReferenceID27" sap2010:WorkflowViewState.IdRef="FlowStep_191">
                    <mwam:Exit sap2010:WorkflowViewState.IdRef="Exit_1" />
                  </FlowStep>
                </FlowDecision.False>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID19</x:Reference>
    <x:Reference>__ReferenceID20</x:Reference>
    <x:Reference>__ReferenceID21</x:Reference>
    <x:Reference>__ReferenceID22</x:Reference>
    <x:Reference>__ReferenceID23</x:Reference>
    <x:Reference>__ReferenceID24</x:Reference>
    <x:Reference>__ReferenceID25</x:Reference>
    <x:Reference>__ReferenceID26</x:Reference>
    <x:Reference>__ReferenceID27</x:Reference>
    <sads:DebugSymbol.Symbol>d21EOlxQcm9qZWN0XE1MQy5XbXMuV2ViQXBwXHNyY1xNTEMuV21zXE1MQy5XbXMuV29ya2Zsb3dzXFdmX0RhdGFcSU5URUdSQVRJT04uSU4kR0VUX09SREVSX1NISVBQRUQkMS4wLjAuMC54YW1sW1wDygYPAgEBXjReRwIBL2cLZ2kCASBtC224AQIBEXILcp4BAgECeAncARUDAfYG3wEN8AEWAwHXBvQBE/QBZwMByAa3BhW3BksDAccG+AEVwwUfAwHkAccFG8cFbwMB1QHoBR2uBikCAV/LBR3aBSYCAUDdBSHhBSkCATB7D4YBGAMB8weKARWKAWUDAeQHmQEXrAEgAwHFB68BG7UBLQMBtQe5ASG5AY8BAwGmB70BI8gBLAMBhweOAReUASIDAfcG5wET7QEkAwHnBuIBE+IBeAMB2Ab7ARv7AYcBAwG4BoICGcEFJAMB5QHsBSXsBYsBAgFg9QUjgAYsAwGuAYMGJ5sGMAMBhwGeBiukBjwCAXPTBSPXBRwCAVDOBSPOBY8BAgFB3wUl3wV1AgExgwEVgwG5AQMBgwh+FX55AwH0B6EBHakBPAMB1QecAR2cAWwDAcYHsgEhsgFwAwG2B8UBKcUBiQEDAZcHwAEpwAF0AwGIB5EBHZEBgAEDAfgGhAId8AQpAwGiA/gEIb0FLAMB5gH9BSn9BakBAwHCAfgFKfgFiAEDAa8BiwYtmAYgAwGbAYYGLYYGhAEDAYgBoQYxoQZ5AgF0jwIjmgIsAwGLBp0CJ6gCMAMB3gWrAiu9AjQDAbEFwAIvzQI4AwGEBdACM4ADPAMB1wSDAzeQA0ADAaoEkwM7wANEAwH9A8MDP8gESAMB0APLBEPUBFUDAaMD/AQjhwUsAwH9AogFI5EFLAMB6QKSBSOdBSwDAcQCngUjsgUoAwGMArMFI7wFNQMB5wGXAimXAnUDAaIGkgIpkgJ6AwGMBqUCLaUCuQEDAfUFoAItoAJ8AwHfBbMCMboCJAMByAWuAjGuAoUBAwGyBcgCNcoCJAMBmwXDAjXDApYBAwGFBdgCOf0CKgMB7gTTAjnTApkBAwHYBIsDPY0DJAMBwQSGAz2GA5gBAwGrBJsDQb0DKgMBlASWA0GWA58BAwH+A8sDRcUEIAMB5wPGA0XGA48BAwHRA9IER9IEngEDAboDzgRJzgSLAQMBpAOEBSmEBbcBAwGQA/8EKf8EjgEDAf4CjwVOjwVgAwH8AosFKYsFhwEDAeoCmgUpmgWiAQMB1wKVBSmVBXYDAcUCoQUpoQWIAQMBjQKlBSewBTADAZ8CugUnugWaAQMB+gG2BSm2BYYBAwHoAa0FLa0FjgEDAbICqAUtqAWAAQMBoAI=</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_123" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Log_11" sap:VirtualizedContainerService.HintSize="220,62" />
      <sap2010:ViewStateData Id="FlowStep_168">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,279</av:Point>
            <av:Size x:Key="ShapeSize">220,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">209.5,748.92 209.5,778.92 310,778.92 310,844.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_124" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SessionGet_6" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_125" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_169">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">9,519</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">432.5,624.96 432.5,654.96 434,654.96 434,687.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_34" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">265,446.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">559,261 725.395,261 725.395,456.55953125</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">265,490 130,490 130,519</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_170">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,391</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,413 300,446.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_171">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">359,279</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">480,341 480,371 300,371 300,391</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_35" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">265,216.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">335,260 480,260 480,279</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">265,260 130,260 130,279</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_172">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,119</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,181 300,216.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_37" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Height">624.95999999999992</x:Double>
            <x:Double x:Key="Width">601</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,119</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_126" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_127" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_128" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_129" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_130" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_131" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_132" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_133" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_134" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_23" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="FlowStep_173">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,851</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,749</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,811 300,851</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_175">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,653</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,715 300,749</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_176">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,561</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,623 300,653</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_177">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,469</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,531 300,561</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_178">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,379</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,441 300,469</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_179">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,291</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,353 300,379</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_180">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,199</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,261 300,291</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_181">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,109</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,171 300,199</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_38" sap:VirtualizedContainerService.HintSize="614,919">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,109</av:PointCollection>
            <x:Double x:Key="Height">883</x:Double>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_135" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_136" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_137" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_138" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="464,212">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_24" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="486,694">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_16" sap:VirtualizedContainerService.HintSize="618,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_13" sap:VirtualizedContainerService.HintSize="632,1146" />
      <sap2010:ViewStateData Id="ForEach`1_8" sap:VirtualizedContainerService.HintSize="662,1296" />
      <sap2010:ViewStateData Id="Assign_139" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_27" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_182">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,689</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,599</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">121,661 120,661 120,689</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_140" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_141" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="EntityAdd_9" sap:VirtualizedContainerService.HintSize="200,62" />
      <sap2010:ViewStateData Id="FlowStep_184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,299</av:Point>
            <av:Size x:Key="ShapeSize">200,62</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_185">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,199</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,261 300,299</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_186">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,109</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,171 300,199</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_39" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,109</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_187">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">330,594.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_36" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">245,526.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">245,570 121,570 121,599</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">315,570 430,570 430,594.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_188">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">180,434.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">280,485.5 280,526.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Exit_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_191">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">340,369</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_37" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">245,301</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">245,344.5 220,344.5 220,404.5 280,404.5 280,434.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">315,344.5 440,344.5 440,369</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_189">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">159,209</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">280,271 280,301</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_190">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">180,124.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">280,175.5 280,209</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_31" sap:VirtualizedContainerService.HintSize="614,781">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">250,12.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">280,87.5 280,124.5</av:PointCollection>
            <x:Double x:Key="Height">745</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GET_ORDER_SHIPPED" sap:VirtualizedContainerService.HintSize="654,861" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>